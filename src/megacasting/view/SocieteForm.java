/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package megacasting.view;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import megacasting.MegaCasting;
import megacasting.dao.AnnonceurDAO;
import megacasting.dao.DiffuseurDAO;
import megacasting.dao.SocieteDAO;
import megacasting.entite.Adresse;
import megacasting.entite.Annonceur;
import megacasting.entite.Diffuseur;
import megacasting.entite.Societe;

/**
 *
 * @author theodore
 */
public class SocieteForm extends javax.swing.JPanel {

    private MainJFrame mainJFrame;
    public enum Erreur {
        ERREUR_RAISONSOCIALE_VIDE, ERREUR_EMAIL_VIDE, ERREUR_EMAIL_INVALIDE,
        ERREUR_TELEPHONE_VIDE, ERREUR_TELEPHONE_INVALIDE, ERREUR_NUMERO_VIDE, ERREUR_NUMERO_INVALIDE,
        ERREUR_RUE_VIDE, ERREUR_RUE_INVALIDE, ERREUR_CODEPOSTAL_VIDE, ERREUR_CODEPOSTAL_INVALIDE,
        ERREUR_VILLE_VIDE, ERREUR_VILLE_INVALIDE, ERREUR_ANNONCEURDIFFUSEUR_VIDE;
    }
    

    public SocieteForm(MainJFrame mainJFrame) {
        this.mainJFrame = mainJFrame;
        initComponents();
        DefaultListModel<Societe>societeListModel = new DefaultListModel<>();
        societeList.setModel(societeListModel);
        refreshList();
        
    }

    /**
     * Creates new form societeForm
     */
    public SocieteForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        raisonSocialLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        telephoneLabel = new javax.swing.JLabel();
        numeroLabel = new javax.swing.JLabel();
        rueLabel = new javax.swing.JLabel();
        codePostalLabel = new javax.swing.JLabel();
        villeLabel = new javax.swing.JLabel();
        raisonSocialeTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        telephoneTextField = new javax.swing.JTextField();
        rueTextField = new javax.swing.JTextField();
        villeTextField = new javax.swing.JTextField();
        annonceurRadioButton = new javax.swing.JRadioButton();
        diffuseurRadioButton = new javax.swing.JRadioButton();
        numeroSpinner = new javax.swing.JSpinner();
        codePostalSpinner = new javax.swing.JSpinner();
        societeSupprimerButton = new javax.swing.JButton();
        validerSocieteButton = new javax.swing.JButton();
        effacerSocieteButton = new javax.swing.JButton();
        supprimerLabel = new javax.swing.JLabel();
        validationLabel = new javax.swing.JLabel();
        annonceurValiderRadioButton = new javax.swing.JRadioButton();
        diffuseurValiderRadioButton = new javax.swing.JRadioButton();
        raisonSocialeErreurLabel = new javax.swing.JLabel();
        emailErreurLabel = new javax.swing.JLabel();
        numeroErreurLabel = new javax.swing.JLabel();
        rueErreurLabel = new javax.swing.JLabel();
        codePostalErreur = new javax.swing.JLabel();
        villeErreurLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        telephoneErreurLabel = new javax.swing.JLabel();
        annonceurDiffuseurErreurLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        societeList = new javax.swing.JList();

        raisonSocialLabel.setText("Raison Sociale");

        emailLabel.setText("Email");

        telephoneLabel.setText("Telephone");

        numeroLabel.setText("Num√©ro");

        rueLabel.setText("Rue");

        codePostalLabel.setText("Code Postal");

        villeLabel.setText("Ville");

        buttonGroup2.add(annonceurRadioButton);
        annonceurRadioButton.setText("Annonceur");
        annonceurRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annonceurRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(diffuseurRadioButton);
        diffuseurRadioButton.setText("Diffuseur");
        diffuseurRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffuseurRadioButtonActionPerformed(evt);
            }
        });

        societeSupprimerButton.setText("Supprimer");
        societeSupprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                societeSupprimerButtonActionPerformed(evt);
            }
        });

        validerSocieteButton.setText("Valider");
        validerSocieteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerSocieteButtonActionPerformed(evt);
            }
        });

        effacerSocieteButton.setText("Effacer");
        effacerSocieteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                effacerSocieteButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(annonceurValiderRadioButton);
        annonceurValiderRadioButton.setText("Annonceur");

        buttonGroup1.add(diffuseurValiderRadioButton);
        diffuseurValiderRadioButton.setText("Diffuseur");

        raisonSocialeErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        emailErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        numeroErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        rueErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        codePostalErreur.setForeground(new java.awt.Color(255, 0, 0));

        villeErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        telephoneErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        annonceurDiffuseurErreurLabel.setForeground(new java.awt.Color(255, 0, 0));

        societeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        societeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                selection(evt);
            }
        });
        jScrollPane1.setViewportView(societeList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(supprimerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(annonceurRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diffuseurRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                    .addComponent(societeSupprimerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(validerSocieteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(effacerSocieteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(raisonSocialLabel)
                                    .addComponent(emailLabel)
                                    .addComponent(telephoneLabel)
                                    .addComponent(numeroLabel)
                                    .addComponent(rueLabel)
                                    .addComponent(codePostalLabel)
                                    .addComponent(villeLabel))
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(diffuseurValiderRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(raisonSocialeTextField)
                                    .addComponent(emailTextField)
                                    .addComponent(telephoneTextField)
                                    .addComponent(rueTextField)
                                    .addComponent(villeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(numeroSpinner)
                                    .addComponent(codePostalSpinner)))
                            .addComponent(annonceurValiderRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(validationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(raisonSocialeErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numeroErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addComponent(rueErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addComponent(codePostalErreur, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(telephoneErreurLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(annonceurDiffuseurErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(villeErreurLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(validationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(raisonSocialLabel)
                            .addComponent(raisonSocialeTextField)
                            .addComponent(raisonSocialeErreurLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailErreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(telephoneLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(telephoneErreurLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numeroLabel)
                            .addComponent(numeroSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeroErreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rueLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rueErreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codePostalLabel)
                            .addComponent(codePostalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codePostalErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(villeLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(villeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(villeErreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(annonceurValiderRadioButton)
                            .addComponent(diffuseurValiderRadioButton)
                            .addComponent(annonceurDiffuseurErreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(validerSocieteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(effacerSocieteButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(annonceurRadioButton)
                            .addComponent(diffuseurRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(societeSupprimerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(supprimerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void annonceurRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annonceurRadioButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel model = (DefaultListModel) societeList.getModel();
        model.clear();
        ArrayList<Societe> societes = SocieteDAO.lister(mainJFrame.cnx);
        for (Societe s : societes) {
            Annonceur a = AnnonceurDAO.trouver(mainJFrame.cnx, s.getId());
            if (a != null) {
                model.addElement(s);
            }
        }
        societeList.setModel(model);
    }//GEN-LAST:event_annonceurRadioButtonActionPerformed

    private void diffuseurRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffuseurRadioButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel model = (DefaultListModel) societeList.getModel();
        model.clear();
        ArrayList<Societe> societes = SocieteDAO.lister(mainJFrame.cnx);
        for (Societe s : societes) {
            Diffuseur d = DiffuseurDAO.trouver(mainJFrame.cnx, s.getId());
            if (d != null) {
                model.addElement(s);
            }
        }
        societeList.setModel(model);
    }//GEN-LAST:event_diffuseurRadioButtonActionPerformed

    private void societeSupprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_societeSupprimerButtonActionPerformed
        // TODO add your handling code here:
        Societe s = (Societe)societeList.getSelectedValue();

        Societe societe = SocieteDAO.trouver(mainJFrame.cnx,s.getId());

        if (societe != null) {
            Annonceur a = AnnonceurDAO.trouver(mainJFrame.cnx, societe.getId());
            if (a != null)
            {
                try {
                    AnnonceurDAO.supprimer(mainJFrame.cnx, a);
                    raz();
                    supprimerLabel.setText("Suppresion r√©ussie !");
                } catch (Exception e) {
                    supprimerLabel.setText("Une erreur s'est produite lors de la suppresion");
                    e.printStackTrace();
                }
            } else {
                Diffuseur d = DiffuseurDAO.trouver(mainJFrame.cnx, societe.getId());
                try {
                    DiffuseurDAO.supprimer(mainJFrame.cnx, d);
                    raz();
                    supprimerLabel.setText("Suppresion r√©ussie !");
                } catch (Exception e) {
                    supprimerLabel.setText("Une erreur s'est produite lors de la suppresion");
                    e.printStackTrace();
                }
            }

        }
        refreshList();
    }//GEN-LAST:event_societeSupprimerButtonActionPerformed

    private void effacerSocieteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_effacerSocieteButtonActionPerformed
        // TODO add your handling code here:
        raz();
    }//GEN-LAST:event_effacerSocieteButtonActionPerformed

    private void validerSocieteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerSocieteButtonActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Erreur> erreurs = verifFormulaire();
        if (erreurs.isEmpty()) {
        // Recuperation des donn√©es de la soci√©t√©
        String raisonSociale = this.raisonSocialeTextField.getText();
        String email = this.emailTextField.getText();
        String telephone = this.telephoneTextField.getText();

        // Recuperation des donn√©es de l'adresse de la soci√©t√©
        int numero = (int)this.numeroSpinner.getValue();
        String rue = this.rueTextField.getText();
        int codePostal = (int)this.codePostalSpinner.getValue();
        String ville = this.villeTextField.getText();


            if (this.annonceurValiderRadioButton.isSelected()) {
                Diffuseur d = DiffuseurDAO.trouver(mainJFrame.cnx, raisonSociale);
                if(d != null)
                {
                    DiffuseurDAO.supprimer(mainJFrame.cnx, d);
                }
                Annonceur a = AnnonceurDAO.trouver(mainJFrame.cnx, raisonSociale);

                if (a == null) {
                    Adresse adresse = new Adresse(numero, rue, codePostal, ville);
                    a = new Annonceur(raisonSociale, email, telephone, adresse);

                    try {
                        AnnonceurDAO.creer(mainJFrame.cnx, a);
                        raz();
                        refreshList();
                        validationLabel.setText("L'annonceur a √©t√© cr√©e !");
                    } catch (Exception e) {
                        validationLabel.setText("Une erreur s'est produite lors de la cr√©ation");
                        e.printStackTrace();
                    }
                } else {
                    a.setRaisonSociale(raisonSociale);
                    a.setEmail(email);
                    a.setTelephone(telephone);

                    Adresse adresse = a.getAdresse();
                    adresse.setNumero(numero);
                    adresse.setRue(rue);
                    adresse.setCodePostal(codePostal);
                    adresse.setVille(ville);
                    try {
                        AnnonceurDAO.modifier(mainJFrame.cnx, a);
                        raz();
                        refreshList();
                        validationLabel.setText("L'annonceur a √©t√© modifi√©e !");
                    } catch (Exception ex) {
                        validationLabel.setText("Une erreur s'est produite lors de la modification");
                        ex.printStackTrace();
                    }
                }
            } else {
                if (this.diffuseurValiderRadioButton.isSelected()) {
                    Annonceur a = AnnonceurDAO.trouver(mainJFrame.cnx, raisonSociale);
                    if(a != null)
                    {
                        AnnonceurDAO.supprimer(mainJFrame.cnx, a);
                    }
                    Diffuseur d = DiffuseurDAO.trouver(mainJFrame.cnx, raisonSociale);

                    if (d == null) {
                        Adresse adresse = new Adresse(numero, rue, codePostal, ville);
                        d = new Diffuseur(raisonSociale, email, telephone, adresse);

                        try {
                            DiffuseurDAO.creer(mainJFrame.cnx, d);
                            raz();
                            refreshList();
                            validationLabel.setText("Le diffuseur a √©t√© cr√©e !");
                        } catch (Exception e) {
                            validationLabel.setText("Une erreur s'est produite lors de la cr√©ation");
                            e.printStackTrace();
                        }
                    } else {
                        d.setRaisonSociale(raisonSociale);
                        d.setEmail(email);
                        d.setTelephone(telephone);

                        Adresse adresse = d.getAdresse();
                        adresse.setNumero(numero);
                        adresse.setRue(rue);
                        adresse.setCodePostal(codePostal);
                        adresse.setVille(ville);
                        try {
                            DiffuseurDAO.modifier(mainJFrame.cnx, d);
                            raz();
                            refreshList();
                            validationLabel.setText("Le  a √©t√© modifi√©e !");
                        } catch (Exception ex) {
                            validationLabel.setText("Une erreur s'est produite lors de la modification");
                            ex.printStackTrace();
                        }
                    }
                }
            }
        } else {
            affichageErreurs(erreurs);
        }


    }//GEN-LAST:event_validerSocieteButtonActionPerformed

    private void selection(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_selection
        // TODO add your handling code here:
        Societe s = (Societe)societeList.getSelectedValue();
        if(s != null)
        {
            this.raisonSocialeTextField.setText(s.getRaisonSociale());
            this.emailTextField.setText(s.getEmail());
            this.telephoneTextField.setText(s.getTelephone());
            this.numeroSpinner.setValue(s.getAdresse().getNumero());
            this.rueTextField.setText(s.getAdresse().getRue());
            this.codePostalSpinner.setValue(s.getAdresse().getCodePostal());
            this.villeTextField.setText(s.getAdresse().getVille());
            
            Annonceur a = AnnonceurDAO.trouver(mainJFrame.cnx, s.getId());
            if(a != null)
            {
                this.annonceurValiderRadioButton.setSelected(true);
            } else {
                this.diffuseurValiderRadioButton.setSelected(true);
            }
        }

        
    }//GEN-LAST:event_selection

    private void refreshList() {
        DefaultListModel<Societe> model = (DefaultListModel<Societe>) societeList.getModel();
        model.clear();
        ArrayList<Societe> societes = SocieteDAO.lister(mainJFrame.cnx);

        for (Societe s : societes) {
            model.addElement(s);
        }

        societeList.setModel(model);

    }

    private void raz() {
        this.raisonSocialeTextField.setText(null);
        this.emailTextField.setText(null);
        this.telephoneTextField.setText(null);
        this.numeroSpinner.setValue(0);
        this.rueTextField.setText(null);
        this.codePostalSpinner.setValue(0);
        this.villeTextField.setText(null);
        this.validationLabel.setText(null);
        this.supprimerLabel.setText(null);
        
        this.raisonSocialeErreurLabel.setText(null);
        this.emailErreurLabel.setText(null);
        this.telephoneErreurLabel.setText(null);
        this.numeroErreurLabel.setText(null);
        this.rueErreurLabel.setText(null);
        this.codePostalErreur.setText(null);
        this.villeErreurLabel.setText(null);
        this.annonceurDiffuseurErreurLabel.setText(null);
        
        this.buttonGroup1.clearSelection();
    }

    private ArrayList verifFormulaire() {

      ArrayList<Erreur> erreurs = new ArrayList();
        
        if (this.raisonSocialeTextField.getText().equals("")) {
            erreurs.add(Erreur.ERREUR_RAISONSOCIALE_VIDE);
        } else {
            this.raisonSocialeErreurLabel.setText(null);
        }
        if (!this.emailTextField.getText().equals("")) {
            String email = this.emailTextField.getText();
            Boolean verifEmail = regexEmail(email);
            if (verifEmail) {
                this.emailErreurLabel.setText(null);
            } else {
                erreurs.add(Erreur.ERREUR_EMAIL_INVALIDE);
            }
        } else {
            erreurs.add(Erreur.ERREUR_EMAIL_VIDE);
        }
        if (!this.telephoneTextField.getText().equals("")) {
            String telephone = this.telephoneTextField.getText();
            Boolean verifTelephone = regexTelephone(telephone);
            if (verifTelephone) {
                this.telephoneErreurLabel.setText(null);
            } else {
                erreurs.add(Erreur.ERREUR_TELEPHONE_INVALIDE);
            }
        } else {
            erreurs.add(Erreur.ERREUR_TELEPHONE_VIDE);
        }
        if ((int)this.numeroSpinner.getValue() != 0)
        {
            this.numeroErreurLabel.setText(null);
        } else {
            erreurs.add(Erreur.ERREUR_NUMERO_VIDE);
        }
        if(!this.rueTextField.getText().equals(""))
        {
            String rue = this.rueTextField.getText();
            Boolean verifRue = regexRue(rue);
            if (verifRue) {
                this.rueErreurLabel.setText(null);
            } else {
                erreurs.add(Erreur.ERREUR_RUE_INVALIDE);
            }
        } else {
            erreurs.add(Erreur.ERREUR_RUE_VIDE);
        }
        if((int)this.codePostalSpinner.getValue() != 0 )
        {
            int codePostalTemp = (int)this.codePostalSpinner.getValue();
            String codePostal = Integer.toString(codePostalTemp);
            Boolean verifCodePostal = regexCodePostal(codePostal);
            if (verifCodePostal) {
                this.codePostalErreur.setText(null);
            } else {
                erreurs.add(Erreur.ERREUR_CODEPOSTAL_INVALIDE);
            }
        } else {
            erreurs.add(Erreur.ERREUR_CODEPOSTAL_VIDE);
        }
        if(!this.villeTextField.getText().equals(""))
        {

            String ville = this.villeTextField.getText();
            Boolean verifVille = regexVille(ville);
            if (verifVille) {
                this.villeErreurLabel.setText(null);
            } else {
                erreurs.add(Erreur.ERREUR_VILLE_INVALIDE);
            }
        } else {
            erreurs.add(Erreur.ERREUR_VILLE_VIDE);
        }

        if((!this.annonceurValiderRadioButton.isSelected())&&(!this.diffuseurValiderRadioButton.isSelected()))
        {
            erreurs.add(Erreur.ERREUR_ANNONCEURDIFFUSEUR_VIDE);
        } else {
            this.annonceurDiffuseurErreurLabel.setText(null);
        }

        return erreurs;

    }

    private Boolean regexTelephone(String telephone) {
        Pattern p = Pattern.compile("^0[1-68]([.-]?[0-9]{2}){4}$");
        Matcher m = p.matcher(telephone);
        Boolean b = m.matches();

        return b;
    }
    
    private Boolean regexEmail(String email) {
        Pattern p = Pattern.compile("^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$");
        Matcher m = p.matcher(email);
        Boolean b = m.matches();
        
        return b;
    }
    
    private Boolean regexRue(String rue) {
        Pattern p = Pattern.compile("^[a-zA-Z ]+$");
        Matcher m = p.matcher(rue);
        Boolean b = m.matches();
        
        return b;
    }
    
    private Boolean regexCodePostal(String codePostal) {
        Pattern p = Pattern.compile("^[0-9]{5}$");
        Matcher m = p.matcher(codePostal);
        Boolean b = m.matches();
        
        return b;
    }
    
    private Boolean regexVille(String ville){
        Pattern p = Pattern.compile("^[a-zA-Z- ]+$");
        Matcher m = p.matcher(ville);
        Boolean b = m.matches();
        
        return b;
    }

    private void affichageErreurs(ArrayList<Erreur> erreurs) {
        
        for(Erreur erreur : erreurs)
        {
            switch(erreur)
            {
                case ERREUR_RAISONSOCIALE_VIDE :      this.raisonSocialeErreurLabel.setText("Veuillez saisir une raison sociale !");
                                                      break;
                case ERREUR_EMAIL_VIDE :              this.emailErreurLabel.setText("Veuillez saisir un email !");
                                                      break;
                case ERREUR_EMAIL_INVALIDE :          this.emailErreurLabel.setText("Veuillez saisir un email valide !");
                                                      break;
                case ERREUR_TELEPHONE_VIDE :          this.telephoneErreurLabel.setText("Veuillez saisir un num√©ro de t√©l√©phone !");
                                                      break;
                case ERREUR_TELEPHONE_INVALIDE :      this.telephoneErreurLabel.setText("Veuillez saisir un num√©ro de t√©l√©phone √† 10 chiffres !");
                                                      break;
                case ERREUR_NUMERO_VIDE :             this.numeroErreurLabel.setText("Veuillez saisir un num√©ro sup√©rieur √† 0 !");
                                                      break;
                case ERREUR_RUE_VIDE :                this.rueErreurLabel.setText("Veuillez saisir un nom de rue !");
                                                      break;
                case ERREUR_RUE_INVALIDE :            this.rueErreurLabel.setText("Veuillez saisir un nom de rue valide !");
                                                      break;
                case ERREUR_CODEPOSTAL_VIDE :         this.codePostalErreur.setText("Veuillez saisir un code postal !");
                                                      break;
                case ERREUR_CODEPOSTAL_INVALIDE :     this.codePostalErreur.setText("Veuillez saisir un code postal √† 5 chiffres !");
                                                      break;
                case ERREUR_VILLE_VIDE :              this.villeErreurLabel.setText("Veuillez saisir un nom de ville !");
                                                      break;
                case ERREUR_ANNONCEURDIFFUSEUR_VIDE : this.annonceurDiffuseurErreurLabel.setText("Veuillez choisir soit un annonceur ou un diffuseur !");
                                                      break;
                default : break;
            }
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel annonceurDiffuseurErreurLabel;
    private javax.swing.JRadioButton annonceurRadioButton;
    private javax.swing.JRadioButton annonceurValiderRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel codePostalErreur;
    private javax.swing.JLabel codePostalLabel;
    private javax.swing.JSpinner codePostalSpinner;
    private javax.swing.JRadioButton diffuseurRadioButton;
    private javax.swing.JRadioButton diffuseurValiderRadioButton;
    private javax.swing.JButton effacerSocieteButton;
    private javax.swing.JLabel emailErreurLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numeroErreurLabel;
    private javax.swing.JLabel numeroLabel;
    private javax.swing.JSpinner numeroSpinner;
    private javax.swing.JLabel raisonSocialLabel;
    private javax.swing.JLabel raisonSocialeErreurLabel;
    private javax.swing.JTextField raisonSocialeTextField;
    private javax.swing.JLabel rueErreurLabel;
    private javax.swing.JLabel rueLabel;
    private javax.swing.JTextField rueTextField;
    private javax.swing.JList societeList;
    private javax.swing.JButton societeSupprimerButton;
    private javax.swing.JLabel supprimerLabel;
    private javax.swing.JLabel telephoneErreurLabel;
    private javax.swing.JLabel telephoneLabel;
    private javax.swing.JTextField telephoneTextField;
    private javax.swing.JLabel validationLabel;
    private javax.swing.JButton validerSocieteButton;
    private javax.swing.JLabel villeErreurLabel;
    private javax.swing.JLabel villeLabel;
    private javax.swing.JTextField villeTextField;
    // End of variables declaration//GEN-END:variables
}
